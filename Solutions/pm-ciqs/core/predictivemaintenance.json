{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "aadTenant": {
            "type": "string",
            "metadata": {
                "description": "The name of the service Tenant"
            }
        },
        "aadInstance": {
            "type": "string",
            "defaultValue": "https://login.microsoftonline.com/{0}",
            "metadata": {
                "description": "Url of the AAD login page (example: https://login.microsoftonline.de/{0})"
            }
        },
        "aadClientId": {
            "type": "string",
            "metadata": {
                "description": "AAD application identifier (GUID)"
            }
        },
        "storageEndpointSuffix": {
            "type": "string",
            "metadata": {
                "description": "Suffix added to Azure Storage hostname (examples: core.windows.net, core.cloudapi.de)"
            }
        },
        "suiteName": {
            "type": "string",
            "metadata": {
                "description": "The name of the suite"
            }
        },
        "storageName": {
            "type": "string",
            "metadata": {
                "description": "The name of the storageAccount"
            }
        },
        "mlStorageName": {
            "type": "string",
            "defaultValue": "mlStorName",
            "metadata": {
                "description": "The name of the Machine Learning storageAccount"
            }
        },
        "mlLocation": {
            "type": "string",
            "defaultValue": "westus",
            "metadata": {
                "description": "Location for ML storage account"
            }
        },
        "mlWorkspaceName": {
            "type": "string",
            "metadata": {
                "description": "The name of the machine learning workspace"
            }
        },
        "ownerId": {
            "type": "string",
            "metadata": {
                "description": "The owner of the machine learning workspace"
            }
        },
        "iotHubName": {
            "type": "string",
            "metadata": {
                "description": "The name of the iotHub"
            }
        },
        "ehName": {
            "type": "string",
            "metadata": {
                "description": "The name of the eventHub"
            }
        },
        "packageUri": {
            "type": "string",
            "defaultValue": "http://aka.ms/azureiot/predictivemaintenance/web"
        },
        "webJobPackageUri": {
            "type": "string",
            "defaultValue": "http://aka.ms/azureiot/predictivemaintenance/webjob"
        },
        "asaStartBehavior": {
            "type": "string",
            "metadata": {
                "description": "The start behavior for Stream Analytics jobs [LastStopTime | JobStartTime (default)]"
            },
            "defaultValue": "JobStartTime"
        },
        "asaStartTime": {
            "type": "string",
            "metadata": {
                "description": "The start time for Stream Analytics jobs"
            },
            "defaultValue": "notused"
        },
        "simulatorDataFileName": {
            "type": "string",
            "metadata": {
                "description": "The file name for the simulator data"
            }
        },
        "mlApiUrl": {
            "type": "string",
            "metadata": {
                "description": "The machine learning API location"
            }
        },
        "mlApiKey": {
            "type": "string",
            "metadata": {
                "description": "The machine learning API key"
            }
        }
    },
    "variables": {
        "storageResourceId": "[resourceId('Microsoft.Storage/storageAccounts/',  parameters('storageName'))]",
        "mlVersion": "2016-04-01",
        "mlResourceId": "[resourceId('Microsoft.MachineLearning/workspaces', parameters('mlWorkspaceName'))]",
        "mlStorageResourceId": "[resourceId('Microsoft.Storage/storageAccounts/',  parameters('mlStorageName'))]",
        "storageAccountType": "Standard_GRS",
        "location": "[resourceGroup().location]",
        "storageVersion": "2016-01-01",
        "storageId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]",
        "ehVersion": "2014-09-01",
        "sbKeyName": "RootManageSharedAccessKey",
        "ehResourceId": "[resourceId('Microsoft.Eventhub/namespaces/authorizationRules', parameters('ehName'), variables('sbKeyName'))]",
        "ehDataName": "[concat(parameters('suiteName'), '-ehdata')]",
        "saVersion": "2015-10-01",
        "webVersion": "2015-04-01",
        "webJobSku": "Standard",
        "webJobWorkerSize": "0",
        "webJobWorkerCount": "2",
        "webJobPlanName": "[concat(parameters('suiteName'), '-jobsplan')]",
        "webJobSiteName": "[concat(parameters('suiteName'), '-jobhost')]",
        "webSku": "Premium",
        "webWorkerSize": "0",
        "webWorkerCount": "2",
        "webPlanName": "[concat(parameters('suiteName'), '-plan')]",
        "webSiteName": "[parameters('suiteName')]",
        "storageEndpointSuffix": "[parameters('storageEndpointSuffix')]",
        "iotHubVersion": "2016-02-03",
        "iotHubSku": "S2",
        "iotHubTier": "Standard",
        "iotHubResourceId": "[resourceId('Microsoft.Devices/Iothubs', parameters('iotHubName'))]",
        "iotHubKeyName": "iothubowner",
        "iotHubKeyResource": "[resourceId('Microsoft.Devices/Iothubs/Iothubkeys', parameters('iotHubName'), variables('iotHubKeyName'))]",
        "telemetryCGName": "telemetrycg",
        "suiteType": "PredictiveMaintenance"
    },
    "resources": [
        {
            "apiVersion": "[variables('storageVersion')]",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('storageName')]",
            "location": "[variables('location')]",
            "tags": {
                "IotSuiteType": "[variables('suiteType')]"
            },
            "kind": "Storage",
            "sku": {
                "name": "[variables('storageAccountType')]"
            }
        },
        {
            "apiVersion": "[variables('storageVersion')]",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('mlStorageName')]",
            "location": "[parameters('mlLocation')]",
            "tags": {
                "IotSuiteType": "[variables('suiteType')]"
            },
            "kind": "Storage",
            "sku": {
                "name": "[variables('storageAccountType')]"
            }
        },
        {
            "apiVersion": "[variables('mlVersion')]",
            "type": "Microsoft.MachineLearning/workspaces",
            "name": "[parameters('mlWorkspaceName')]",
            "location": "[parameters('mlLocation')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('mlStorageName'))]"
            ],
            "properties": {
                "UserStorageAccountId": "[variables('mlStorageResourceId')]",
                "OwnerEmail" : "[parameters('ownerId')]"
            }
        },
        {
            "apiVersion": "[variables('iotHubVersion')]",
            "type": "Microsoft.Devices/Iothubs",
            "name": "[parameters('iotHubName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "[variables('iotHubSku')]",
                "tier": "[variables('iotHubTier')]",
                "capacity": 1
            },
            "tags": {
                "IotSuiteType": "[variables('suiteType')]"
            },
            "properties": {
                "location": "[variables('location')]"
            }
        },
        {
            "apiVersion": "[variables('iotHubVersion')]",
            "name": "[concat(parameters('iotHubName'), '/events/', variables('telemetryCGName'))]",
            "type": "Microsoft.Devices/Iothubs/eventhubEndpoints/ConsumerGroups",
            "dependsOn": [
                "[concat('Microsoft.Devices/Iothubs/', parameters('iotHubName'))]"
            ]
        },
        {
            "apiVersion": "[variables('ehVersion')]",
            "name": "[parameters('ehName')]",
            "type": "Microsoft.Eventhub/namespaces",
            "location": "[variables('location')]",
            "tags": {
                "IotSuiteType": "[variables('suiteType')]"
            },
            "properties": {
                "messagingSku": 1,
                "region": "[variables('location')]"
            },
            "resources": [
                {
                    "apiVersion": "[variables('ehVersion')]",
                    "name": "[variables('ehDataName')]",
                    "type": "eventHubs",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[concat('Microsoft.Eventhub/namespaces/', parameters('ehName'))]"
                    ],
                    "properties": {
                        "path": "[variables('ehDataName')]",
                        "MessageRetentionInDays": 1
                    }
                }
            ]
        },
        {
            "apiVersion": "[variables('saVersion')]",
            "type": "Microsoft.StreamAnalytics/streamingjobs",
            "name": "[concat(parameters('suiteName'), '-Telemetry')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[concat('Microsoft.Eventhub/namespaces/', parameters('ehName'), '/eventHubs/', variables('ehDataName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageName'))]",
                "[concat('Microsoft.Devices/Iothubs/', parameters('iotHubName'))]"
            ],
            "tags": {
                "IotSuiteType": "[variables('suiteType')]"
            },
            "properties": {
                "sku": {
                    "name": "standard"
                },
                "OutputStartMode": "[parameters('asaStartBehavior')]",
                "EventsOutOfOrderMaxDelayInSeconds": 10,
                "EventsOutOfOrderPolicy": "adjust",
                "Inputs": [
                    {
                        "Name": "IoTHubStream",
                        "Properties": {
                            "DataSource": {
                                "Properties": {
                                    "consumerGroupName": "[variables('telemetryCGName')]",
                                    "iotHubNamespace": "[parameters('iotHubName')]",
                                    "sharedAccessPolicyKey": "[listkeys(variables('iotHubKeyResource'), variables('iotHubVersion')).primaryKey]",
                                    "sharedAccessPolicyName": "[variables('iotHubKeyName')]"
                                },
                                "Type": "Microsoft.Devices/IotHubs"
                            },
                            "Serialization": {
                                "Properties": {
                                    "Encoding": "UTF8"
                                },
                                "Type": "Json"
                            },
                            "Type": "Stream"
                        }
                    }
                ],
                "Outputs": [
                    {
                        "Name": "Telemetry",
                        "Properties": {
                            "DataSource": {
                                "Properties": {
                                    "AccountKey": "[listkeys(variables('storageId'), variables('storageVersion')).keys[0].value]",
                                    "AccountName": "[parameters('storageName')]",
                                    "BatchSize": 1,
                                    "ColumnsToRemove": [ "DeviceId", "Counter" ],
                                    "PartitionKey": "DeviceId",
                                    "RowKey": "Counter",
                                    "Table": "devicetelemetry"
                                },
                                "Type": "Microsoft.Storage/Table"
                            }
                        }
                    },
                    {
                        "Name": "TelemetrySummary",
                        "Properties": {
                            "DataSource": {
                                "Properties": {
                                    "EventHubName": "[variables('ehDataName')]",
                                    "ServiceBusNamespace": "[parameters('ehName')]",
                                    "SharedAccessPolicyKey": "[listkeys(variables('ehResourceId'), variables('ehVersion')).primaryKey]",
                                    "SharedAccessPolicyName": "[variables('sbKeyName')]",
                                    "PartitionKey": "DeviceId"
                                },
                                "Type": "Microsoft.ServiceBus/EventHub"
                            },
                            "Serialization": {
                                "Properties": {
                                    "Encoding": "UTF8",
                                    "Format": "Array"
                                },
                                "Type": "Json"
                            }
                        }
                    }
                ],
                "Transformation": {
                    "Name": "AllToBlob",
                    "Properties": {
                        "Query": "WITH\r\n    [StreamData] AS (\r\n        SELECT\r\n            *\r\n        FROM\r\n            [IoTHubStream]\r\n        WHERE\r\n            [ObjectType] IS NULL -- Filter out device info and command responses\r\n    )\r\n\r\nSELECT\r\n    DeviceId,\r\n    Counter,\r\n    Cycle,\r\n    Sensor9,\r\n    Sensor11,\r\n    Sensor14,\r\n    Sensor15\r\nINTO\r\n    [Telemetry]\r\nFROM\r\n    [StreamData]\r\n\r\nSELECT\r\n    DeviceId,\r\n    Cycle,\r\n    AVG(Sensor9) AS Sensor9,\r\n    AVG(Sensor11) AS Sensor11,\r\n    AVG(Sensor14) AS Sensor14,\r\n    AVG(Sensor15) AS Sensor15\r\nINTO\r\n    [TelemetrySummary]\r\nFROM\r\n    [StreamData]\r\nGROUP BY\r\n    DeviceId,\r\n    Cycle,\r\n    SLIDINGWINDOW(minute, 2) -- Duration must cover the longest possible cycle\r\nHAVING\r\n    SUM(EndOfCycle) = 2 -- Sum when EndOfCycle contains both start and end events",
                        "StreamingUnits": 1
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('webVersion')]",
            "name": "[variables('webPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[variables('location')]",
            "tags": {
                "IotSuiteType": "[variables('suiteType')]"
            },
            "properties": {
                "name": "[variables('webPlanName')]",
                "sku": "[variables('webSku')]",
                "workerSize": "[variables('webWorkerSize')]",
                "numberOfWorkers": "[variables('webWorkerCount')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]",
                "[resourceId('Microsoft.Devices/Iothubs', parameters('iotHubName'))]"
            ]
        },
        {
            "apiVersion": "[variables('webVersion')]",
            "name": "[variables('webJobPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[variables('location')]",
            "tags": {
                "IotSuiteType": "[variables('suiteType')]"
            },
            "properties": {
                "name": "[variables('webJobPlanName')]",
                "sku": "[variables('webJobSku')]",
                "workerSize": "[variables('webJobWorkerSize')]",
                "numberOfWorkers": "[variables('webJobWorkerCount')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('webPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageName'))]",
                "[resourceId('Microsoft.Devices/Iothubs', parameters('iotHubName'))]",
                "[resourceId('Microsoft.StreamAnalytics/streamingjobs', concat(parameters('suiteName'), '-Telemetry'))]"
            ]
        },
        {
            "apiVersion": "[variables('webVersion')]",
            "name": "[variables('webSiteName')]",
            "type": "Microsoft.Web/sites",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('webPlanName'))]"
            ],
            "tags": {
                "IotSuiteType": "[variables('suiteType')]"
            },
            "properties": {
                "serverFarmId": "[variables('webPlanName')]",
                "siteConfig": {
                    "AlwaysOn": true
                }
            },
            "resources": [
                {
                    "apiVersion": "[variables('webVersion')]",
                    "name": "MSDeploy",
                    "type": "extensions",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('webSiteName'))]"
                    ],
                    "properties": {
                        "packageUri": "[parameters('packageUri')]",
                        "connectionString": "",
                        "dbType": ""
                    }
                },
                {
                    "apiVersion": "[variables('webVersion')]",
                    "name": "Appsettings",
                    "type": "config",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('webSiteName'))]",
                        "[concat('Microsoft.Web/Sites/', variables('webSiteName'), '/Extensions/MSDeploy')]"
                    ],
                    "properties": {
                        "ida.AADTenant": "[parameters('aadTenant')]",
                        "ida.AADInstance": "[parameters('aadInstance')]",
                        "ida.AADClientId": "[parameters('aadClientId')]",
                        "iotHub.HostName": "[reference(variables('iotHubResourceId')).hostName]",
                        "iotHub.ConnectionString": "[concat('HostName=', reference(variables('iotHubResourceId')).hostName, ';SharedAccessKeyName=', variables('iotHubKeyName'), ';SharedAccessKey=', listkeys(variables('iotHubKeyResource'), variables('iotHubVersion')).primaryKey)]",
                        "device.StorageConnectionString": "[concat('DefaultEndpointsProtocol=https;EndpointSuffix=', parameters('storageEndpointSuffix'), ';AccountName=', parameters('storageName'), ';AccountKey=', listkeys(variables('storageId'), variables('storageVersion')).keys[0].value)]",
                        "device.TableName": "DeviceList",
                        "ObjectTypePrefix": "",
                        "SolutionName": "[variables('webSiteName')]"
                    }
                }
            ]
        },
        {
            "apiVersion": "[variables('webVersion')]",
            "name": "[variables('webJobSiteName')]",
            "type": "Microsoft.Web/sites",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('webJobPlanName'))]"
            ],
            "tags": {
                "IotSuiteType": "[variables('suiteType')]"
            },
            "properties": {
                "serverFarmId": "[variables('webJobPlanName')]",
                "siteConfig": {
                    "AlwaysOn": true
                }
            },
            "resources": [
                {
                    "apiVersion": "[variables('webVersion')]",
                    "name": "MSDeploy",
                    "type": "extensions",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('webJobSiteName'))]"
                    ],
                    "properties": {
                        "packageUri": "[parameters('webJobPackageUri')]",
                        "connectionString": "",
                        "dbType": ""
                    }
                },
                {
                    "apiVersion": "[variables('webVersion')]",
                    "name": "Appsettings",
                    "type": "config",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('webJobSiteName'))]",
                        "[concat('Microsoft.Web/Sites/', variables('webJobSiteName'), '/Extensions/MSDeploy')]"
                    ],
                    "properties": {
                        "iotHub.HostName": "[reference(variables('iotHubResourceId')).hostName]",
                        "iotHub.ConnectionString": "[concat('HostName=', reference(variables('iotHubResourceId')).hostName, ';SharedAccessKeyName=', variables('iotHubKeyName'), ';SharedAccessKey=', listkeys(variables('iotHubKeyResource'), variables('iotHubVersion')).primaryKey)]",
                        "device.StorageConnectionString": "[concat('DefaultEndpointsProtocol=https;EndpointSuffix=', parameters('storageEndpointSuffix'), ';AccountName=', parameters('storageName'), ';AccountKey=', listkeys(variables('storageId'), variables('storageVersion')).keys[0].value)]",
                        "device.TableName": "DeviceList",
                        "eventHub.HubName": "[variables('ehDataName')]",
                        "eventHub.ConnectionString": "[listkeys(variables('ehResourceId'), variables('ehVersion')).primaryConnectionString]",
                        "eventHub.StorageConnectionString": "[concat('DefaultEndpointsProtocol=https;EndpointSuffix=', parameters('storageEndpointSuffix'), ';AccountName=', parameters('storageName'), ';AccountKey=', listkeys(variables('storageId'), variables('storageVersion')).keys[0].value)]",
                        "ObjectTypePrefix": "",
                        "SimulatorDataFileName": "[parameters('simulatorDataFileName')]",
                        "MLApiUrl": "[parameters('mlApiUrl')]",
                        "MLApiKey": "[parameters('mlApiKey')]"
                    }
                }
            ]
        }
    ],
    "outputs": {
        "iotHubHostName": {
            "type": "string",
            "value": "[reference(variables('iotHubResourceId')).hostName]"
        },
        "iotHubConnectionString": {
            "type": "string",
            "value": "[concat('HostName=', reference(variables('iotHubResourceId')).hostName, ';SharedAccessKeyName=', variables('iotHubKeyName'), ';SharedAccessKey=', listkeys(variables('iotHubKeyResource'), variables('iotHubVersion')).primaryKey)]"
        },
        "storageConnectionString": {
            "type": "string",
            "value": "[concat('DefaultEndpointsProtocol=https;EndpointSuffix=', parameters('storageEndpointSuffix'), ';AccountName=', parameters('storageName'), ';AccountKey=', listkeys(variables('storageId'), variables('storageVersion')).keys[0].value)]"
        },
        "ehDataName": {
            "type": "string",
            "value": "[variables('ehDataName')]"
        },
        "ehConnectionString": {
            "type": "string",
            "value": "[listkeys(variables('ehResourceId'), variables('ehVersion')).primaryConnectionString]"
        },
        "azureWebsite": {
            "type": "string",
            "value": "[concat('https://', reference(concat('Microsoft.Web/sites/', variables('webSiteName'))).hostNames[0])]"
        },
        "TableName": {
            "type": "string",
            "value": "DeviceList"
        },
        "ObjectTypePrefix": {
            "type": "string",
            "value": ""
        },
        "oMlWorkspaceObject": {"type": "object", "value": "[reference(variables('mlResourceId'), variables('mlVersion'))]"},
        "oMlWorkspaceToken": {"type": "string", "value": "[listWorkspaceKeys(variables('mlResourceId'), variables('mlVersion')).primaryToken]"},
        "oMlWorkspaceWorkspaceID": {"type": "string", "value": "[reference(variables('mlResourceId'), variables('mlVersion')).WorkspaceId]"},
        "oMlWorkspaceWorkspaceLink": {"type": "string", "value": "[concat('https://studio.azureml.net/Home/ViewWorkspace/', reference(variables('mlResourceId'), variables('mlVersion')).WorkspaceId)]"},
        "oStorageAccountId": {
            "type": "string",
            "value": "[variables('storageResourceId')]"
        },
        "oStorageAccountKey": {
            "type": "string",
            "value": "[listKeys(variables('storageResourceId'), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
        },
        "oMlStorageAccountKey": {
            "type": "string",
            "value": "[listKeys(variables('mlStorageResourceId'), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
        },
        "oMlStorageAccountId": {
            "type": "string",
            "value": "[variables('mlStorageResourceId')]"
        }
    }
}